apply plugin: 'maven-publish'
apply plugin: 'java-library'

project.version = 0.10
def mainV = '0.10'
def impl8V = '0.10'
def core8V = '0.10'
def core11V = '0.10'

task wrapper(type: Wrapper) {
    gradleVersion = '4.10.2'
    distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
}

task myJavadocs(type: Javadoc) {
    source = sourceSets.main.allJava
    options.encoding = 'UTF-8'
}

javadoc {
    options.encoding = 'UTF-8'
    options.destinationDirectory(new File("A:\\Workspaces\\CrystalShardDocumentation\\"))
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

jar {
    test
}

allprojects {
    group 'de.kaleidox'

    apply plugin: 'java-library'

    compileJava {
        options.encoding = 'UTF-8'
    }

    jar {
        if (!System.getenv().containsKey("TRAVIS")) {
            archiveName = "CrystalShard-${project.name}.jar"
            destinationDir = new File("${project.rootProject.projectDir.absolutePath}\\artifacts")
        }
    }

    repositories {
        jcenter()
    }

    dependencies {
        implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.3'
        implementation 'com.vdurmont:emoji-java:4.0.0'
    }

    sourceSets {
        main {
            java {
                srcDirs = ["src\\main\\java"]
            }
            resources {
                srcDirs = ["src\\main\\resources"]
            }
        }
    }
}

project(":Tests") {
    version = 1

    sourceCompatibility = 10
    targetCompatibility = 10
    
    dependencies {
        testImplementation project(':Main')
        testImplementation project(':Internal-8')
        testImplementation project(':Core-8')
        testImplementation project(':Core-11')
        
        testImplementation 'junit:junit:4.12'
        testImplementation 'org.reflections:reflections:0.9.11'
    }
    
    sourceSets {
        test {
            java {
                srcDirs = ["src\\test\\java"]
            }
            resources {
                srcDirs = ["src\\test\\resources"]
            }
        }
    }
    
    test {
        test.outputs.upToDateWhen {false}
    }
}

project(":Main") {
    version = (mainV == null ? project.version : mainV)

    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

project(":Internal-8") {
    version = (impl8V == null ? project.version : impl8V)

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    dependencies {
        implementation project(":Main")
    }
}

project(":Core-8") {
    version = (core8V == null ? project.version : core8V)

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    dependencies {
        implementation project(":Main")
        implementation 'com.squareup.okhttp3:okhttp:3.9.1'
    }
}

project(":Core-8") {
    version '0.9'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    dependencies {
        implementation project(":Main")
        implementation 'com.squareup.okhttp3:okhttp:3.9.1'
    }
}

project(":Core-11") {
    version = (core11V == null ? project.version : core11V)

    sourceCompatibility = 11
    targetCompatibility = 11

    dependencies {
        implementation project(":Main")
    }
}