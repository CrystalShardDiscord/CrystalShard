import java.util.stream.Collectors

allprojects {
    apply plugin: 'java-library'

    group 'org.comroid'
}

tasks.findByName('wrapper').configure {
    gradleVersion = '6.2'
    distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
}

configurations {
    compileClasspath {
        resolutionStrategy.activateDependencyLocking()
    }
}

allprojects {
    apply from: "$rootDir/gradle/vars.gradle"
    apply from: "$rootDir/gradle/global.gradle"

    repositories {
        maven {
            url "https://maven.jetbrains.space/comroid/repo"
            credentials.username "Anonymous.User"
            credentials.password "anonymous"
        }
    }

    dependencies {
        api 'org.comroid:common-util:1.2.0'

        implementation 'org.comroid:varbind:0.1.0'
        implementation 'org.comroid:uniform:0.1.0'
        implementation 'org.comroid:spellbind:0.10.2'
    }
}

dependencies {
    testImplementation 'junit:junit:4.12'
}

task allJavadoc(type: Javadoc) {
    source = files(exportedProjects.stream()
            .map { rootProject.findProject(it.toString()) }
            .filter { !Objects.isNull(it) }
            .filter { it.hasProperty("sourceSet") }
            .map { it.sourceSets.main.allJava }
            .collect(Collectors.toList()))
    classpath = files(exportedProjects.stream()
            .map { rootProject.findProject(it.toString()) }
            .filter { !Objects.isNull(it) }
            .filter { it.hasProperty("sourceSet") }
            .map { it.sourceSets.main.compileClasspath }
            .collect(Collectors.toList()))
    options {
        destinationDirectory(file("$rootDir/docs/"))
        encoding = 'UTF-8'
    }
}

assemble {
    dependsOn = getTasksByName('assemble', true)
            .stream()
            .filter { (it as Task).project.parent.equals(rootProject) }
            .collect()

    exportedProjects.stream()
            .map { rootProject.findProject(it.toString()) }
            .filter { !Objects.isNull(it) }
            .forEach { it.apply from: "$rootDir/gradle/publishing.gradle" }
}
