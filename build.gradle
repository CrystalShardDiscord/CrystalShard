apply plugin: 'java-library'
apply plugin: 'maven-publish'

project.version = "0.10-SNAPSHOT"
def mainV = '0.11'
def impl8V = '0.11'
def core8V = '0.10'
def core11V = '0.10'
def extUtilV = '1.1'

version = "${project.version}"

task wrapper(type: Wrapper) {
    gradleVersion = '4.10.2'
    distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
}

task javadocs(type: Javadoc) {
    source = sourceSets.main.allJava
    options.encoding = 'UTF-8'
}

sourceSets {
    main {
        java {
            srcDirs = ["Main\\src\\main\\java"]
        }
    }
    impl8 {
        java {
            srcDirs = ["Internal-8\\src\\main\\java"]
        }
    }
    core8 {
        java {
            srcDirs = ["Core-8\\src\\main\\java"]
        }
    }
    core11 {
        java {
            srcDirs = ["Core-11\\src\\main\\java"]
        }
    }
    utils {
        java {
            srcDirs = ["ExtensiveUtils\\src\\main\\java"]
        }
    }
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html4', true)
    }
    options.encoding = 'UTF-8'
    options.destinationDirectory(new File("A:\\Workspaces\\CrystalShardDocumentation\\"))
}

jar {
    test
}

task mainJar(type: Jar) {
    from sourceSets.main.allJava
}

task implementationJar(type: Jar) {
    from sourceSets.impl8.allJava
}

task coreEightJar(type: Jar) {
    from sourceSets.core8.allJava
}

task coreElevenJar(type: Jar) {
    from sourceSets.core11.allJava
}

task utilsJar(type: Jar) {
    from sourceSets.utils.allJava
}

publishing {
    repositories {
        maven {
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots"
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            url = project.version.endsWith("SNAPSHOT") ? snapshotsRepoUrl : releasesRepoUrl
            name = "Sonatype"

            credentials {
                def uName = ""
                def passwd = ""
                int r
                def stream = new FileInputStream(new File("../sonatype-username.txt"))
                while ((r = stream.read()) != -1) uName = (uName + (char)r)
                stream = new FileInputStream(new File("../sonatype-password.txt"))
                while ((r = stream.read()) != -1) passwd = (passwd + (char)r)

                username uName
                password passwd
            }
        }
    }

    publications {
        mavenJava(MavenPublication) {
            artifactId = 'crystalshard'
            from components.java

            artifacts {
                mainJar
                implementationJar
                coreEightJar
                coreElevenJar
                utilsJar
            }

            pom {
                name = "CrystalShard"
                description = "Modular Java Discord library!"

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = "burdoto"
                        name = "Tobias Burdow"
                        email = "burdoto@outlook.com"
                    }
                }
            }
        }
    }
}

if (project.hasProperty("signing.keyId")) {
    apply plugin: 'signing'
    signing {
        sign publishing.publications.mavenJava
    }
}

allprojects {
    group 'de.kaleidox'

    apply plugin: 'java-library'

    compileJava {
        options.encoding = 'UTF-8'
    }

    jar {
        if (!System.getenv().containsKey("TRAVIS")) {
            archiveName = "CrystalShard-${project.name}.jar"
            destinationDir = new File("${project.rootProject.projectDir.absolutePath}\\artifacts")
        }
    }

    repositories {
        jcenter()
        maven { url 'https://jitpack.io' }
    }

    dependencies {
        implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.3'
        implementation 'com.vdurmont:emoji-java:4.0.0'
        implementation 'com.github.burdoto:KalUtils:b5ea2a7'
    }

    sourceSets {
        main {
            java {
                srcDirs = ["src\\main\\java"]
            }
            resources {
                srcDirs = ["src\\main\\resources"]
            }
        }
    }
}

project(":Tests") {
    version = 1

    sourceCompatibility = 10
    targetCompatibility = 10

    dependencies {
        testImplementation project(':Main')
        testImplementation project(':Internal-8')
        testImplementation project(':Core-8')
        testImplementation project(':Core-11')
        testImplementation project(':ExtensiveUtils')

        testImplementation 'junit:junit:4.12'
        testImplementation 'org.reflections:reflections:0.9.11'
    }

    sourceSets {
        test {
            java {
                srcDirs = ["src\\test\\java"]
            }
            resources {
                srcDirs = ["src\\test\\resources"]
            }
        }
    }

    test {
        test.outputs.upToDateWhen { false }
    }
}

project(":Main") {
    version = (mainV == null ? project.version : mainV)

    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

project(":ExtensiveUtils") {
    version = (extUtilV == null ? project.version : extUtilV)

    sourceCompatibility = 9
    targetCompatibility = 9

    dependencies {
        implementation project(':Main')
        implementation project(':Internal-8')

        implementation 'org.reflections:reflections:0.9.11'
    }
}

project(":Internal-8") {
    version = (impl8V == null ? project.version : impl8V)

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    dependencies {
        implementation project(":Main")
    }
}

project(":Core-8") {
    version = (core8V == null ? project.version : core8V)

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    dependencies {
        implementation project(":Main")
        implementation 'com.squareup.okhttp3:okhttp:3.9.1'
    }
}

project(":Core-8") {
    version '0.9'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    dependencies {
        implementation project(":Main")
        implementation 'com.squareup.okhttp3:okhttp:3.9.1'
    }
}

project(":Core-11") {
    version = (core11V == null ? project.version : core11V)

    sourceCompatibility = 11
    targetCompatibility = 11

    dependencies {
        implementation project(":Main")
    }
}